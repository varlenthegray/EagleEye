/*!
 *
 * jquery.fancytree.clones.js
 * Support faster lookup of nodes by key and shared ref-ids.
 * (Extension module for jquery.fancytree.js: https://github.com/mar10/fancytree/)
 *
 * Copyright (c) 2008-2019, Martin Wendt (http://wwWendt.de)
 *
 * Released under the MIT license
 * https://github.com/mar10/fancytree/wiki/LicenseInfo
 *
 * @version 2.30.2
 * @date 2019-01-13T08:17:01Z
 */
(function(a){if(typeof define==="function"&&define.amd){define(["jquery","./jquery.fancytree"],a)}else{if(typeof module==="object"&&module.exports){require("./jquery.fancytree");module.exports=a(require("jquery"))}else{a(jQuery)}}})(function(d){function c(f,g){if(!f){g=g?": "+g:"";d.error("Assertion failed"+g)}}function e(f,h){var g;for(g=f.length-1;g>=0;g--){if(f[g]===h){f.splice(g,1);return true}}return false}function b(o,m,k){var f,l,p=o.length&3,q=o.length-p,n=k,j=3432918353,g=461845907,h=0;while(h<q){l=(o.charCodeAt(h)&255)|((o.charCodeAt(++h)&255)<<8)|((o.charCodeAt(++h)&255)<<16)|((o.charCodeAt(++h)&255)<<24);++h;l=((l&65535)*j+((((l>>>16)*j)&65535)<<16))&4294967295;l=(l<<15)|(l>>>17);l=((l&65535)*g+((((l>>>16)*g)&65535)<<16))&4294967295;n^=l;n=(n<<13)|(n>>>19);f=((n&65535)*5+((((n>>>16)*5)&65535)<<16))&4294967295;n=(f&65535)+27492+((((f>>>16)+58964)&65535)<<16)}l=0;switch(p){case 3:l^=(o.charCodeAt(h+2)&255)<<16;case 2:l^=(o.charCodeAt(h+1)&255)<<8;case 1:l^=o.charCodeAt(h)&255;l=((l&65535)*j+((((l>>>16)*j)&65535)<<16))&4294967295;l=(l<<15)|(l>>>17);l=((l&65535)*g+((((l>>>16)*g)&65535)<<16))&4294967295;n^=l}n^=o.length;n^=n>>>16;n=((n&65535)*2246822507+((((n>>>16)*2246822507)&65535)<<16))&4294967295;n^=n>>>13;n=((n&65535)*3266489909+((((n>>>16)*3266489909)&65535)<<16))&4294967295;n^=n>>>16;if(m){return("0000000"+(n>>>0).toString(16)).substr(-8)}return n>>>0}function a(g){var f,h=d.map(g.getParentList(false,true),function(i){return i.refKey||i.key});h=h.join("/");f="id_"+b(h,true);return f}d.ui.fancytree._FancytreeNodeClass.prototype.getCloneList=function(h){var i,f=this.tree,g=f.refMap[this.refKey]||null,j=f.keyMap;if(g){i=this.key;if(h){g=d.map(g,function(k){return j[k]})}else{g=d.map(g,function(k){return k===i?null:j[k]});if(g.length<1){g=null}}}return g};d.ui.fancytree._FancytreeNodeClass.prototype.isClone=function(){var f=this.refKey||null,g=(f&&this.tree.refMap[f])||null;return !!(g&&g.length>1)};d.ui.fancytree._FancytreeNodeClass.prototype.reRegister=function(k,f){k=k==null?null:""+k;f=f==null?null:""+f;var n=this.tree,m=this.key,i=this.refKey,g=n.keyMap,h=n.refMap,l=h[i]||null,j=false;if(k!=null&&k!==this.key){if(g[k]){d.error("[ext-clones] reRegister("+k+"): already exists: "+this)}delete g[m];g[k]=this;if(l){h[i]=d.map(l,function(o){return o===m?k:o})}this.key=k;j=true}if(f!=null&&f!==this.refKey){if(l){if(l.length===1){delete h[i]}else{h[i]=d.map(l,function(o){return o===m?null:o})}}if(h[f]){h[f].append(k)}else{h[f]=[this.key]}this.refKey=f;j=true}return j};d.ui.fancytree._FancytreeNodeClass.prototype.setRefKey=function(f){return this.reRegister(null,f)};d.ui.fancytree._FancytreeClass.prototype.getNodesByRef=function(f,g){var i=this.keyMap,h=this.refMap[f]||null;if(h){if(g){h=d.map(h,function(k){var j=i[k];return j.isDescendantOf(g)?j:null})}else{h=d.map(h,function(j){return i[j]})}if(h.length<1){h=null}}return h};d.ui.fancytree._FancytreeClass.prototype.changeRefKey=function(f,g){var j,k,l=this.keyMap,h=this.refMap[f]||null;if(h){for(j=0;j<h.length;j++){k=l[h[j]];k.refKey=g}delete this.refMap[f];this.refMap[g]=h}};d.ui.fancytree.registerExtension({name:"clones",version:"2.30.2",options:{highlightActiveClones:true,highlightClones:false},treeCreate:function(f){this._superApply(arguments);f.tree.refMap={};f.tree.keyMap={}},treeInit:function(f){this.$container.addClass("fancytree-ext-clones");c(f.options.defaultKey==null);f.options.defaultKey=function(g){return a(g)};this._superApply(arguments)},treeClear:function(f){f.tree.refMap={};f.tree.keyMap={};return this._superApply(arguments)},treeRegisterNode:function(n,m,f){var l,h,o=n.tree,i=o.keyMap,j=o.refMap,k=f.key,g=f&&f.refKey!=null?""+f.refKey:null;if(f.isStatusNode()){return this._super(n,m,f)}if(m){if(i[f.key]!=null){d.error("clones.treeRegisterNode: node.key already exists: "+f)}i[k]=f;if(g){l=j[g];if(l){l.push(k);if(l.length===2&&n.options.clones.highlightClones){i[l[0]].renderStatus()}}else{j[g]=[k]}}}else{if(i[k]==null){d.error("clones.treeRegisterNode: node.key not registered: "+f.key)}delete i[k];if(g){l=j[g];if(l){h=l.length;if(h<=1){c(h===1);c(l[0]===k);delete j[g]}else{e(l,k);if(h===2&&n.options.clones.highlightClones){i[l[0]].renderStatus()}}}}}return this._super(n,m,f)},nodeRenderStatus:function(g){var f,h,i=g.node;h=this._super(g);if(g.options.clones.highlightClones){f=d(i[g.tree.statusClassPropName]);if(f.length&&i.isClone()){f.addClass("fancytree-clone")}}return h},nodeSetActive:function(h,g,f){var i,k=h.tree.statusClassPropName,j=h.node;i=this._superApply(arguments);if(h.options.clones.highlightActiveClones&&j.isClone()){d.each(j.getCloneList(true),function(l,m){d(m[k]).toggleClass("fancytree-active-clone",g!==false)})}return i}});return d.ui.fancytree});